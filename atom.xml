<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[BUILDING NON-LINEAR ANALYSIS TOOLS FOR C-PAC]]></title>
  <link href="http://erramuzpe.github.io/C-PAC/atom.xml" rel="self"/>
  <link href="http://erramuzpe.github.io/C-PAC/"/>
  <updated>2015-05-08T17:28:52+02:00</updated>
  <id>http://erramuzpe.github.io/C-PAC/</id>
  <author>
    <name><![CDATA[github.com/erramuzpe]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[First Scripts for C-PAC: This Is Just the Beginning]]></title>
    <link href="http://erramuzpe.github.io/C-PAC/blog/2015/05/08/first-scripts-for-c-pac-this-is-just-the-beginning/"/>
    <updated>2015-05-08T15:40:53+02:00</updated>
    <id>http://erramuzpe.github.io/C-PAC/blog/2015/05/08/first-scripts-for-c-pac-this-is-just-the-beginning</id>
    <content type="html"><![CDATA[<p>In this blog I will write about my experience with C-PAC development. Our intention here is to develop a series of scripts that allow us (C-PAC users) to calculate some measures over non-linear fMRI timeseries and integrate them in a workflow. Our aim is to extend and improve C-PAC&rsquo;s features.</p>

<p>In this first post I will try to explain some of what I have done for my first two scripts for C-PAC as my first contact with C-PAC. I would like to learn a lot about C-PAC&rsquo;s structure, workflows etc. and give back too. The goal of this first scripts is to say &lsquo;hi&rsquo;, have some feedback from main developers and take a first hands-on with the code.</p>

<p>In order to learn from <a href="https://github.com/FCP-INDI/C-PAC">C-PAC&rsquo;s repo</a> on <a href="https://github.com">on GitHub</a> and to C-PAC&rsquo;s forums and I saw a question on cross correlations (<a href="https://groups.google.com/forum/#!topic/cpax_forum/GMnwQD7B8l8">this</a>) and though it could be a good exercise to try possibilities (out of using other available utils like FSLcc) and afterwards, I also made the calculation for Transfer Entropy (TE) Granger Causality (GC)). As a short description, these 2 scripts calculate correlations and GC between ROI-time series extracted from an fMRI file (this is done using a ROI-mask with the <em>gen_roi_timeserier.py</em> function which is already in C-PAC).</p>

<p>My code is in the copy I <a href="https://github.com/erramuzpe/C-PAC">forked</a>, in a new branch called <a href="https://github.com/erramuzpe/C-PAC/tree/series_mod">series_mod</a>. I saved my scripts in a folder of the same name.</p>

<p>We have got here 3 files, <em><em>init</em> _ </em>.py<em>, </em>series_mod.py<em> and </em>utils.py_ .
I used these three files from a template of other toolbox in C-PAC. <a href="https://github.com/erramuzpe/C-PAC/blob/series_mod/CPAC/series_mod/series_mod.py"><em>series_mod.py</em></a> generates the workflows:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="k">def</span> <span class="nf">create_corr</span><span class="p">():</span>
</span><span class='line'>    <span class="n">corr</span> <span class="o">=</span> <span class="n">pe</span><span class="o">.</span><span class="n">Workflow</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="s">&#39;corr&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">inputNode</span> <span class="o">=</span> <span class="n">pe</span><span class="o">.</span><span class="n">Node</span><span class="p">(</span><span class="n">util</span><span class="o">.</span><span class="n">IdentityInterface</span><span class="p">(</span><span class="n">fields</span><span class="o">=</span><span class="p">[</span>
</span><span class='line'>                                                <span class="s">&#39;in_file&#39;</span><span class="p">,</span>
</span><span class='line'>                                                <span class="s">&#39;mask&#39;</span><span class="p">,</span>
</span><span class='line'>                                                <span class="s">&#39;TR&#39;</span>
</span><span class='line'>                                                <span class="p">]),</span>
</span><span class='line'>                        <span class="n">name</span><span class="o">=</span><span class="s">&#39;inputspec&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">outputNode</span> <span class="o">=</span> <span class="n">pe</span><span class="o">.</span><span class="n">Node</span><span class="p">(</span><span class="n">util</span><span class="o">.</span><span class="n">IdentityInterface</span><span class="p">(</span><span class="n">fields</span><span class="o">=</span><span class="p">[</span>
</span><span class='line'>                                                    <span class="s">&#39;corr_mat&#39;</span><span class="p">]),</span>
</span><span class='line'>                        <span class="n">name</span><span class="o">=</span><span class="s">&#39;outputspec&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">corr_mat</span> <span class="o">=</span> <span class="n">pe</span><span class="o">.</span><span class="n">Node</span><span class="p">(</span><span class="n">util</span><span class="o">.</span><span class="n">Function</span><span class="p">(</span><span class="n">input_names</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;in_file&#39;</span><span class="p">,</span> <span class="s">&#39;mask&#39;</span><span class="p">,</span><span class="s">&#39;TR&#39;</span><span class="p">],</span>
</span><span class='line'>                                   <span class="n">output_names</span><span class="o">=</span><span class="p">[</span><span class="s">&#39;out_file&#39;</span><span class="p">],</span>
</span><span class='line'>                     <span class="n">function</span><span class="o">=</span><span class="n">compute_corr</span><span class="p">),</span>
</span><span class='line'>                     <span class="n">name</span><span class="o">=</span><span class="s">&#39;corr_mat&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">corr</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">inputNode</span><span class="p">,</span> <span class="s">&#39;in_file&#39;</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">corr_mat</span><span class="p">,</span> <span class="s">&#39;in_file&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">corr</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">inputNode</span><span class="p">,</span> <span class="s">&#39;mask&#39;</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">corr_mat</span><span class="p">,</span> <span class="s">&#39;mask&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">corr</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">inputNode</span><span class="p">,</span> <span class="s">&#39;TR&#39;</span><span class="p">,</span>
</span><span class='line'>                    <span class="n">corr_mat</span><span class="p">,</span> <span class="s">&#39;TR&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">corr</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">corr_mat</span><span class="p">,</span> <span class="s">&#39;out_file&#39;</span><span class="p">,</span>
</span><span class='line'>                 <span class="n">outputNode</span><span class="p">,</span> <span class="s">&#39;corr_mat&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">corr</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are 3 input parameters; fMRI series, the ROI-mask and TR of the fMRI. This function makes use of the functions in <a href="https://github.com/erramuzpe/C-PAC/blob/series_mod/CPAC/series_mod/utils.py"><em>utils.py</em></a>. Let&rsquo;s see part of the code (present in my repo):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="k">def</span> <span class="nf">compute_corr</span><span class="p">(</span><span class="n">in_file</span><span class="p">,</span> <span class="n">mask_file</span><span class="p">,</span> <span class="n">TR</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">    Computes the Network Correlation Matrix for ROIs in the mask</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">numpy</span> <span class="kn">as</span> <span class="nn">np</span>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">matplotlib.mlab</span> <span class="kn">import</span> <span class="n">csv2rec</span>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">cpac.timeseries</span> <span class="kn">import</span> <span class="n">gen_roi_timeseries</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#Import the time-series objects:</span>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">nitime.timeseries</span> <span class="kn">import</span> <span class="n">TimeSeries</span>
</span><span class='line'>    <span class="c">#Import the analysis objects:</span>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">nitime.analysis</span> <span class="kn">import</span> <span class="n">CorrelationAnalyzer</span>
</span><span class='line'>    <span class="c">#Import utility functions:</span>
</span><span class='line'>    <span class="kn">from</span> <span class="nn">nitime.utils</span> <span class="kn">import</span> <span class="n">percent_change</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">output_type</span> <span class="o">=</span> <span class="p">[</span><span class="bp">True</span><span class="p">,</span><span class="bp">False</span><span class="p">]</span> <span class="c">#list of boolean for csv and npz file formats</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">data</span> <span class="o">=</span> <span class="n">gen_roi_timeseries</span><span class="p">(</span><span class="n">in_file</span><span class="p">,</span> <span class="n">mask_file</span><span class="p">,</span> <span class="n">output_type</span><span class="p">)</span>
</span><span class='line'>    <span class="c">#from this files gen_roi_timeseries</span>
</span><span class='line'>    <span class="c">#once we have the time series:</span>
</span><span class='line'>    <span class="n">data_rec</span> <span class="o">=</span> <span class="n">csv2rec</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#Extract information:</span>
</span><span class='line'>    <span class="n">roi_names</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">data_rec</span><span class="o">.</span><span class="n">dtype</span><span class="o">.</span><span class="n">names</span><span class="p">)</span>
</span><span class='line'>    <span class="n">n_samples</span> <span class="o">=</span> <span class="n">data_rec</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#Make an empty container for the data</span>
</span><span class='line'>    <span class="n">data</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="nb">len</span><span class="p">(</span><span class="n">roi_names</span><span class="p">),</span> <span class="n">n_samples</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="n">n_idx</span><span class="p">,</span> <span class="n">roi</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">roi_names</span><span class="p">):</span>
</span><span class='line'>        <span class="n">data</span><span class="p">[</span><span class="n">n_idx</span><span class="p">]</span> <span class="o">=</span> <span class="n">data_rec</span><span class="p">[</span><span class="n">roi</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">#Normalize the data:</span>
</span><span class='line'>    <span class="n">data</span> <span class="o">=</span> <span class="n">percent_change</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">T</span> <span class="o">=</span> <span class="n">TimeSeries</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="n">sampling_interval</span><span class="o">=</span><span class="n">TR</span><span class="p">)</span>
</span><span class='line'>    <span class="n">T</span><span class="o">.</span><span class="n">metadata</span><span class="p">[</span><span class="s">&#39;roi&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">roi_names</span>
</span><span class='line'>    <span class="c">#Initialize the correlation analyzer</span>
</span><span class='line'>    <span class="n">C</span> <span class="o">=</span> <span class="n">CorrelationAnalyzer</span><span class="p">(</span><span class="n">T</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">## IN CASE WE WOULD LIKE TO ADD A THRESHOLD FEATURE (set inside the function</span>
</span><span class='line'>    <span class="c"># or from input)</span>
</span><span class='line'>    <span class="c"># C.corrcoef[C.corrcoef&lt;0.7] = 0</span>
</span><span class='line'>    <span class="k">return</span>  <span class="n">C</span><span class="o">.</span><span class="n">corrcoef</span>
</span></code></pre></td></tr></table></div></figure>


<p>It is a trivial computation after extracting the time-series. This data could have been treated or filtered, but this first scripts were just to train myself with the repo, python, nypipe workflows etc. . I will next discuss about the measures we are going to work on.</p>

<p>I started from my own implementations in python..</p>

<p>But also took some of this code and ideas from these tutorials:</p>

<p>[1] <a href="http://nipy.org/nitime/examples/resting_state_fmri.html">http://nipy.org/nitime/examples/resting_state_fmri.html</a></p>

<p>[2] <a href="http://nipy.org/nitime/examples/granger_fmri.html">http://nipy.org/nitime/examples/granger_fmri.html</a></p>

<p>The result when making calculations on preprocessed data is…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Post - Hello World]]></title>
    <link href="http://erramuzpe.github.io/C-PAC/blog/2015/05/08/Hello-World/"/>
    <updated>2015-05-08T13:44:48+02:00</updated>
    <id>http://erramuzpe.github.io/C-PAC/blog/2015/05/08/Hello-World</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="k">print</span> <span class="s">&#39;Hello World!&#39;</span>
</span><span class='line'><span class="k">print</span> <span class="s">&#39;Kaixo Mundua!&#39;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
